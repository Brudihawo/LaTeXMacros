[texmaker]
Macros\0=Figure, "\\begin{figure}[H]\n\t\\centering\n\t\\includegraphics[width=%<Breite%>\\textwidth]{img/%<Speicherort%>}\n\\end{figure}", Fig, #fimg
Macros\1=Textwidth, \\textwidth, TW, #tw
Macros\2=Math Text, \\text{%<Text Shit%>}, MthTxt, 
Macros\3=Itemize Standard, "\\begin{itemize}[noitemsep, label=-]\n\t%<Content..%>\n\\end{itemize}", StanIt, #itm#
Macros\4=Initialisation, "\\documentclass[12pt, reqno]{article}\n\\usepackage[utf8]{inputenc}\n\\usepackage[T1]{fontenc}\n\n\\usepackage{amsmath}\n\\usepackage{amssymb}\n\\usepackage{mathtools}\n\n\\usepackage[hidelinks]{hyperref}\t\n\n\\usepackage{enumitem}\n\\usepackage{xcolor}\n\\usepackage{graphicx}\n\n\\graphicspath{{img/}}\n\\usepackage[textwidth=16cm,textheight=22cm]{geometry}\n\\usepackage[justification=centering]{caption}", Init, #init
Macros\5=Grad, ^{\\circ}, Grd, \xb0
Macros\6=Illustration, \\centering\n\\def\\svgwidth{%<Gr\xf6\xdf\x65%>\\textwidth}\n\\input{img/%<Dateiname%>.pdf_tex}, Ill, #ill
Macros\7=Ableitung, %SCRIPT\neditor.write(\"\\\\text{\\\\frac{d}{d\" + triggerMatches[1] + \"}}\"), d/dt, #d/d(.+)#
Macros\8=Tabelle, \\begin{tabu}{%<Tabellenkonfiguration%>}\n\t%<Content%>\n\\end{tabu}, Tab, #tab
Macros\9=Equation, %equation, Eqn, 
Macros\10=scriptfig, "%SCRIPT\nvar str_write;\nif (triggerMatches[4] != \"\") {\n\tstr_write = \"\\\\begin{figure}[h]\\n\\\n\t\\t\\\\centering\\n\\\n\t\\t\\\\includegraphics[width=\" + triggerMatches[1] + \"]{\" + triggerMatches[2] + \"}\\n\\\n\t\\t\\\\caption{\" + triggerMatches[3] + \"}\\n\\\n\t\\t\\\\label{img:\" + triggerMatches[4] + \"}\\n\\\n\t\\\\end{figure}\\n\";\n} else {\n\tstr_write = \"\\\\begin{figure}[h]\\n\\\n\t\\t\\\\centering\\n\\\n\t\\t\\\\includegraphics[width=\" + triggerMatches[1] + \"]{\" + triggerMatches[2] + \"}\\n\\\n\t\\t\\\\caption{\" + triggerMatches[3] + \"}\\n\\\n\t\\\\end{figure}\\n\";\n}\neditor.write(str_write);\n\t", , fig\\.(\\S+) (\\S+) (.+)#(.*)\\.
Macros\11=scripteqn, "%SCRIPT\neditor.write(\"\\\\begin{equation} \\n\\\n\\t\\t\" + triggerMatches[1].replace(/[$]/g, \"\") + \"\\n\\\n\\\\end{equation}\")\n", , eq\\.(.+)\\.
Macros\12=scriptfrac, "%SCRIPT\neditor.write(\ntriggerMatches[1] + \n\"\\\\frac{\" + triggerMatches[2] + \"}{\" + triggerMatches[3] + \"}\" + \ntriggerMatches[4]);\n", , (.*)//(.+)//(.+)//(.*)
Macros\13=supersub, "%SCRIPT\neditor.write(triggerMatches[1]);\n\nvar mid = triggerMatches[2].split(/\\^|_/g);\nvar hat_pos = triggerMatches[2].indexOf(\"^\");\nvar und_pos = triggerMatches[2].indexOf(\"_\");\n\nif ((hat_pos == -1) && (und_pos != -1)) {\n\teditor.write(mid[0] + \"_\\\\mathrm{\" + mid[1] + \"}\");\n} else if ((und_pos == -1) && (hat_pos != -1)) {\n\teditor.write(mid[0] + \"^\\\\mathrm{\" + mid[1] + \"}\");\n} else if ((und_pos != -1) && (hat_pos != -1)) {\n\tif (hat_pos < und_pos) {\n\t\teditor.write(mid[0] + \"^\\\\mathrm{\" + mid[1] + \"}_\\\\mathrm{\" + mid[2] + \"}\");\n\t} else {\n\t\teditor.write(mid[0] + \"_\\\\mathrm{\" + mid[1] + \"}^\\\\mathrm{\" + mid[2] + \"}\");\n\t}\n} else {\n\teditor.write(\"\\\\mathrm{\" + triggerMatches[2] + \"}\");\n}\neditor.write(triggerMatches[3]);", , (.*)##(.+)##(.*)
Macros\14=ArrowsRight, "%SCRIPT\nswitch(triggerMatches[1]) {\n\tcase \"-\":\n\t\teditor.write(\"\\\\rightarrow\");\n\t\tbreak;\n\tcase \"=\":\n\t\teditor.write(\"\\\\Rightarrow\");\n\t\tbreak;\n\tcase \"--\":\n\t\teditor.write(\"\\\\longrightarrow\");\n\t\tbreak;\n\tcase \"==\":\n\t\teditor.write(\"\\\\Longrightarrow\");\n\t\tbreak;\n\tdefault:\n\t\teditor.write(triggerMatches[1] + \">\");\n}", , "([-=]{1,2})>"
Macros\15=ArrowsLeft, "%SCRIPT\nswitch(triggerMatches[1]) {\ncase \"-\":\neditor.write(\"\\\\leftarrow\");\nbreak;\ncase \"=\":\neditor.write(\"\\\\Leftarrow\");\nbreak;\ncase \"--\":\neditor.write(\"\\\\longleftarrow\");\nbreak;\ncase \"==\":\neditor.write(\"\\\\Longleftarrow\");\nbreak;\ndefault:\neditor.write(\"<\" + triggerMatches[1]);\n}", , "<([-=]{1,2})"

